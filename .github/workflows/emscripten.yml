name: 'Emscripten'

on:
  push:
    branches:
      - '*'
  pull_request:
    types: [ opened, synchronize ]

jobs:
  build:
    strategy:
      fail-fast: false
      matrix:
        include:
        - BuildType: Release
          Backend: GLFW
          Mode: Standard
          
        - BuildType: Release
          Backend: SDL2
          Mode: Standard
          
        - BuildType: Release
          Backend: GLFW
          Mode: SharewareDemo

        - BuildType: Release
          Backend: SDL2
          Mode: SharewareDemo

    runs-on: 'ubuntu-latest'

    steps:
    - name: 'Checkout Code'
      uses: actions/checkout@v3
      with:
        fetch-depth: 0
        
    - name: 'Install Emscripten SDK'
      run: |
        sudo update-alternatives --install /usr/bin/python python /usr/bin/python3 10
        cd ..
        git clone https://github.com/emscripten-core/emsdk.git
        cd emsdk
        
        #EMSDK_VERSION=latest
        EMSDK_VERSION=3.1.24
        ./emsdk install $EMSDK_VERSION
        ./emsdk activate $EMSDK_VERSION

    - name: 'Configure CMake'
      run: |
        case "${{ matrix.Mode }}" in
          Standard ) sharewareDemo="OFF" ;;
          SharewareDemo ) sharewareDemo="ON" ;;
          * ) exit 1 ;;
        esac
        
        export OS=emscripten
        export CC=emcc
        
        source ../emsdk/emsdk_env.sh
        
        emcmake cmake -B ./_build/ -D CMAKE_BUILD_TYPE=${{ matrix.BuildType }} -D NCINE_LINKTIME_OPTIMIZATION=ON -D NCINE_PREFERRED_BACKEND=${{ matrix.Backend }} -D NCINE_VERSION_FROM_GIT=ON -D SHAREWARE_DEMO_ONLY=$sharewareDemo

    - name: 'Build'
      run: |
        make -j $(nproc) -C ./_build/

    #- name: 'Create Package'
    #  run: |
    #    mkdir ./_package/
    #    cp -f ./_build/jazz2 ./_package/jazz2
    #    cp -f -r ./Content/ ./_package/Content/
    #    
    #- name: 'Upload Package'
    #  uses: actions/upload-artifact@v3
    #  with:
    #    name: Jazz2_Emscripten_${{ matrix.CC }}_${{ matrix.Backend }}
    #    path: ./_package/
        